{"version":3,"sources":["routes/Login/service/index.js","routes/Login/model/index.js"],"names":["login","payload","a","$$","post","namespace","state","loggedIn","message","user","subscriptions","setup","history","dispatch","listen","pathname","indexOf","removeStore","effects","call","put","status","data","setStore","routerRedux","replace","type","console","log","logout","_","reducers","loginSuccess","loginError"],"mappings":"6LAEO,SAAeA,EAAtB,kC,4CAAO,WAAqBC,GAArB,SAAAC,EAAA,+EACEC,IAAGC,KAAK,cAAeH,IADzB,4C,sBCEQ,WACbI,UAAW,QAEXC,MAAO,CACLC,UAAU,EACVC,QAAS,GACTC,KAAM,IAGRC,cAAe,CACbC,MADa,YACiB,IAAtBC,EAAqB,EAArBA,QAAqB,EAAZC,SACf,OAAOD,EAAQE,QAAO,aACqB,IADH,EAAfC,SACVC,QAAQ,gBACnBb,IAAGc,YAAY,aAMvBC,QAAS,CACNlB,MADM,6GAG+B,OAF7BC,EADF,EACEA,QAAakB,EADf,EACeA,KAAMC,EADrB,EACqBA,IADrB,kBAGqCD,EAAKnB,EAAOC,GAHjD,mBAGKoB,EAHL,EAGKA,OAAQb,EAHb,EAGaA,QAASc,EAHtB,EAGsBA,MACrBD,EAJD,iBAMD,OADAlB,IAAGoB,SAAS,OAAQD,GALnB,UAMKF,EAAII,IAAYC,QAAQ,MAN7B,gCAQD,OARC,UAQKL,EAAI,CACRM,KAAM,aACNzB,QAAS,CAAEO,aAVZ,gCAeH,OAfG,0BAcHmB,QAAQC,IAAR,MAdG,UAeGR,EAAI,CACRM,KAAM,aACNzB,QAAS,CAAEO,QAAS,KAAEA,WAjBrB,yDAqBNqB,OArBM,qBAqBCC,EArBD,sEAqBMV,IArBN,2CAwBTW,SAAU,CACRC,aADQ,SACK1B,EADL,GAC0B,IAAZL,EAAW,EAAXA,QACpB,OAAO,eACFK,EADL,CAEEC,UAAU,EACVC,QAAS,GACTC,KAAMR,KAGVgC,WATQ,SASG3B,EATH,GASwB,IAAZL,EAAW,EAAXA,QAClB,OAAO,eACFK,EADL,CAEEC,UAAU,EACVC,QAASP,EAAQO","file":"static/js/47.0c12f8ea.chunk.js","sourcesContent":["import $$ from 'cmn-utils';\r\n\r\nexport async function login(payload) {\r\n  return $$.post('/user/login', payload);\r\n}","import { routerRedux } from 'dva';\r\nimport { login } from '../service';\r\nimport $$ from 'cmn-utils';\r\n\r\nexport default {\r\n  namespace: 'login',\r\n\r\n  state: {\r\n    loggedIn: false,\r\n    message: '',\r\n    user: {}\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ history, dispatch }) {\r\n      return history.listen(({ pathname }) => {\r\n        if (pathname.indexOf('/sign/login') !== -1) {\r\n          $$.removeStore('user');\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  effects: {\r\n    *login({ payload }, { call, put }) {\r\n      try {\r\n        const { status, message, data } = yield call(login, payload);\r\n        if (status) {\r\n          $$.setStore('user', data);\r\n          yield put(routerRedux.replace('/'));\r\n        } else {\r\n          yield put({\r\n            type: 'loginError',\r\n            payload: { message }\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n        yield put({\r\n          type: 'loginError',\r\n          payload: { message: e.message }\r\n        });\r\n      }\r\n    },\r\n    *logout(_, { put }) { }\r\n  },\r\n\r\n  reducers: {\r\n    loginSuccess(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        message: '',\r\n        user: payload\r\n      };\r\n    },\r\n    loginError(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        message: payload.message\r\n      };\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}