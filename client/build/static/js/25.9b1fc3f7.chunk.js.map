{"version":3,"sources":["components/Charts/G2/G2.js","components/Charts/G2/index.js","decorator/resizeMe.js","routes/Dashboard/components/index.js","components/BaseComponent/index.js","components/Panel/Panel.js","components/Panel/index.js","../node_modules/@ant-design/icons/ExclamationCircleFilled.js","../node_modules/@ant-design/icons/lib/icons/ExclamationCircleFilled.js","../node_modules/@ant-design/icons-svg/lib/asn/ExclamationCircleFilled.js"],"names":["Chart","BizCharts","Charts","resizeMe","refreshRate","onGetG2Instance","chart","this","props","size","children","otherProps","width","height","padding","PureComponent","track","setTheme","defaultColor","shape","interval","fillOpacity","G2","debounce","$$","throttle","defaultConfig","refreshMode","config","refreshFunc","WrappedComponent","onResize","element","parentNode","getComputedStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","parseInt","setState","onResizeStrategy","state","undefined","position","resizeSensor","ResizeSensor","detach","className","ref","node","style","Content","Axis","Geom","Tooltip","Legend","Coord","Label","rankingListData","i","push","title","total","Dashboard","connect","dashboard","bar1","bar2","gutter","md","header","cover","type","antd","Bar2","data","map","item","key","Line1","Pie1","Bar1","BaseComponent","scale","sales","tickInterval","name","crosshairs","color","dv","DataSet","createView","source","transform","fields","value","adjust","marginRatio","DataView","count","field","dimension","as","percent","formatter","val","radius","innerRadius","offsetY","window","innerHeight","offsetX","showTitle","itemTpl","tooltip","lineWidth","stroke","content","point","month","Tokyo","London","range","label","notice","onAdd","record","visible","onUpdate","onDelete","isArray","length","confirm","onOk","handleDelete","onCancel","records","history","React","Component","noop","_","Panel","onExpand","expand","e","onChange","collapse","onCollapse","onRefresh","refresh","animationName","onClose","theme","prefix","scroll","classnames","cx","styles","bodyStyles","overflow","Header","onClick","Icon","onConfirm","placement","CSSAnimate","callback","nextProps","prevState","isEqual","defaultProps","obj","Object","defineProperty","exports","default","_default","require","__esModule","module","_react","_interopRequireDefault","_ExclamationCircleFilled","_AntdIcon","ExclamationCircleFilled","createElement","assign","icon","displayName","forwardRef"],"mappings":"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","file":"static/js/25.9b1fc3f7.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport * as BizCharts from 'bizcharts';\r\nimport resizeMe from '@/decorator/resizeMe';\r\nconst { Chart } = BizCharts;\r\n\r\n/**\r\n * 重写BizCharts的Chart，主要目地是传入外部size\r\n * BizCharts已经很好的封装了g2，最好的使用方式不是重造轮子，而是快速使用官网中的例子，并完美展现在我们的框架中\r\n * 所以我们没有新建Bar,Line,Pie这些组件，增加使用和学习的成本：）\r\n */\r\n@resizeMe({ refreshRate: 50 })\r\nclass Charts extends PureComponent {\r\n  onGetG2Instance = chart => {\r\n    this.chart = chart;\r\n  }\r\n\r\n  render() {\r\n    const { size, children, ...otherProps } = this.props;\r\n    const { width, height } = size;\r\n\r\n    return (\r\n      <Chart \r\n        height={height} \r\n        width={width} \r\n        padding={'auto'} \r\n        {...otherProps}\r\n        onGetG2Instance={(chart) => {\r\n          this.chart = chart;\r\n        }}\r\n      >\r\n        {children}\r\n      </Chart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default {\r\n  ...BizCharts,\r\n  Chart: Charts\r\n};\r\n","// 全局 G2 设置\r\nimport { track, setTheme } from 'bizcharts';\r\nimport G2 from './G2';\r\n\r\nconst config = {\r\n  defaultColor: '#1089ff',\r\n  shape: {\r\n    interval: {\r\n      fillOpacity: 1\r\n    }\r\n  }\r\n};\r\n\r\ntrack(false);\r\nsetTheme(config);\r\nexport default G2;\r\n","import React, { PureComponent } from 'react';\r\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\r\nimport $$ from 'cmn-utils';\r\nconst { debounce, throttle } = $$;\r\n\r\n/**\r\n * 在一个类上增加这个装饰器，可以监听组件的大小变化，\r\n * 被包装的类在porps中将注入组件的width和height，并且\r\n * 在上级函组件中可以使用onResize函数\r\n * @param {*} config\r\n */\r\nconst defaultConfig = {\r\n  refreshRate: 16, // 调用频率\r\n  refreshMode: 'throttle' // 使用函数，只能是节流或防抖函数[throttle | debounce]\r\n};\r\n\r\nconst resizeMe = (config = defaultConfig) => {\r\n  const refreshFunc = config.refreshMode === 'throttle' ? throttle : debounce;\r\n\r\n  return WrappedComponent => {\r\n    return class extends PureComponent {\r\n      constructor(props) {\r\n        super(props);\r\n        this.onResizeStrategy = refreshFunc(this.onResize, config.refreshRate);\r\n        this.state = {\r\n          width: undefined,\r\n          height: undefined,\r\n          position: undefined\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        const element = this.element.parentNode;\r\n        this.resizeSensor = new ResizeSensor(element, this.onResizeStrategy);\r\n        this.onResizeStrategy();\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        const element = this.element.parentNode;\r\n        this.resizeSensor.detach(element, this.onResizeStrategy);\r\n      }\r\n\r\n      onResize = () => {\r\n        if (!this.element) return;\r\n\r\n        const element = this.element.parentNode;\r\n        const { onResize } = this.props;\r\n        const {\r\n          width,\r\n          height,\r\n          paddingLeft,\r\n          paddingRight,\r\n          paddingTop,\r\n          paddingBottom\r\n        } = getComputedStyle(element);\r\n\r\n        const size = {\r\n          width:\r\n            parseInt(width, 10) -\r\n            parseInt(paddingLeft, 10) -\r\n            parseInt(paddingRight, 10),\r\n          height:\r\n            parseInt(height, 10) -\r\n            parseInt(paddingTop, 10) -\r\n            parseInt(paddingBottom, 10)\r\n        };\r\n        this.setState(size);\r\n\r\n        onResize && onResize(size);\r\n      };\r\n\r\n      render() {\r\n        const { width, height } = this.state;\r\n        const { className, ...otherProps } = this.props;\r\n        const styles = {\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '100%'\r\n        };\r\n        return (\r\n          <div\r\n            ref={node => (this.element = node)}\r\n            style={styles}\r\n            className={className}\r\n          >\r\n            {width && height ? (\r\n              <WrappedComponent {...otherProps} size={{ ...this.state }} />\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nexport default resizeMe;\r\n","import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Layout, Col, Row } from 'antd';\r\nimport Icon from 'components/Icon';\r\nimport BaseComponent from 'components/BaseComponent';\r\nimport Panel from 'components/Panel';\r\nimport G2 from 'components/Charts/G2';\r\nimport DataSet from '@antv/data-set';\r\nimport './index.less';\r\nconst { Content } = Layout;\r\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, Label } = G2;\r\n\r\nconst rankingListData = [];\r\nfor (let i = 0; i < 7; i += 1) {\r\n  rankingListData.push({\r\n    title: `工专路 ${i} 号店`,\r\n    total: 323234\r\n  });\r\n}\r\n\r\n@connect(({ dashboard }) => ({\r\n  dashboard\r\n}))\r\nexport default class Dashboard extends BaseComponent {\r\n  render() {\r\n    const { dashboard } = this.props;\r\n    const { bar1, bar2 } = dashboard;\r\n    return (\r\n      <Layout className=\"full-layout page dashboard-page\">\r\n        <Content>\r\n          <Row gutter={20}>\r\n            <Col md={6}>\r\n              <Panel className=\"qq\" header={false} cover>\r\n                <Icon type=\"QqOutlined\" antd />\r\n                <h2>\r\n                  <b>523</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">QQ</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"wechat\" header={false} cover>\r\n                <Icon type=\"WechatOutlined\" antd />\r\n                <h2>\r\n                  <b>99+</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">微信</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"skype\" header={false} cover>\r\n                <Icon type=\"SkypeOutlined\" antd />\r\n                <h2>\r\n                  <b>2</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">skype</h5>\r\n              </Panel>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Panel className=\"github\" header={false} cover>\r\n                <Icon type=\"GithubOutlined\" antd />\r\n                <h2>\r\n                  <b>1k+</b>\r\n                </h2>\r\n                <h5 className=\"text-muted\">github</h5>\r\n              </Panel>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Panel title=\"数据面板组件\" height={300}>\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-auto-hidden flex flex-column\">\r\n                    <h4 className=\"flex-none\">销售额分布</h4>\r\n                    <div className=\"flex-auto-hidden\">\r\n                      <Bar2 data={bar2} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-none sales-order\">\r\n                    <h4>门店销售额排名</h4>\r\n                    <ul>\r\n                      {rankingListData.map((item, i) => (\r\n                        <li key={item.title}>\r\n                          <span>{i + 1}</span>\r\n                          <span>{item.title}</span>\r\n                          <span>{item.total}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </Panel>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col md={8}>\r\n              <Panel title=\"折线图\" height={260}>\r\n                <Line1 />\r\n              </Panel>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Panel title=\"饼图\" height={260}>\r\n                <Pie1 />\r\n              </Panel>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Panel title=\"柱状图\" height={260}>\r\n                <Bar1 data={bar1} />\r\n              </Panel>\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/basic-column\r\nconst Bar1 = props => {\r\n  return (\r\n    <Chart data={props.data} scale={{ sales: { tickInterval: 20 } }}>\r\n      <Axis name=\"year\" />\r\n      <Axis name=\"sales\" />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom\r\n        type=\"interval\"\r\n        position=\"year*sales\"\r\n        color={[\r\n          'year',\r\n          ['#3da0ff', '#51ca73', '#fad337', '#424e87', '#985ce6']\r\n        ]}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/grouped-column\r\nconst Bar2 = props => {\r\n  const ds = new DataSet();\r\n  const dv = ds.createView().source(props.data);\r\n  dv.transform({\r\n    type: 'fold',\r\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'Jun.', 'Jul.', 'Aug.'], // 展开字段集\r\n    key: '月份', // key字段\r\n    value: '月均降雨量' // value字段\r\n  });\r\n  return (\r\n    <Chart data={dv}>\r\n      <Axis name=\"月份\" />\r\n      <Axis name=\"月均降雨量\" />\r\n      <Legend />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom\r\n        type=\"interval\"\r\n        position=\"月份*月均降雨量\"\r\n        color={'name'}\r\n        adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nconst Pie1 = props => {\r\n  const data = [\r\n    { item: '事例一', count: 40 },\r\n    { item: '事例二', count: 21 },\r\n    { item: '事例三', count: 17 },\r\n    { item: '事例四', count: 13 },\r\n    { item: '事例五', count: 9 }\r\n  ];\r\n\r\n  const dv = new DataSet.DataView();\r\n  dv.source(data).transform({\r\n    type: 'percent',\r\n    field: 'count',\r\n    dimension: 'item',\r\n    as: 'percent'\r\n  });\r\n  const cols = {\r\n    percent: {\r\n      formatter: val => {\r\n        val = val * 100 + '%';\r\n        return val;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Chart data={dv} scale={cols} padding={10}>\r\n      <Coord type={'theta'} radius={0.75} innerRadius={0.6} />\r\n      <Axis name=\"percent\" />\r\n      <Legend\r\n        position=\"right\"\r\n        offsetY={-window.innerHeight / 2 + 120}\r\n        offsetX={-100}\r\n      />\r\n      <Tooltip\r\n        showTitle={false}\r\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n      />\r\n      <Geom\r\n        type=\"intervalStack\"\r\n        position=\"percent\"\r\n        color=\"item\"\r\n        tooltip={[\r\n          'item*percent',\r\n          (item, percent) => {\r\n            percent = percent * 100 + '%';\r\n            return {\r\n              name: item,\r\n              value: percent\r\n            };\r\n          }\r\n        ]}\r\n        style={{ lineWidth: 1, stroke: '#fff' }}\r\n      >\r\n        <Label\r\n          content=\"percent\"\r\n          formatter={(val, item) => {\r\n            return item.point.item + ': ' + val;\r\n          }}\r\n        />\r\n      </Geom>\r\n    </Chart>\r\n  );\r\n};\r\n\r\n// https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series\r\nconst Line1 = props => {\r\n  const data = [\r\n    { month: 'Jan', Tokyo: 7.0, London: 3.9 },\r\n    { month: 'Feb', Tokyo: 6.9, London: 4.2 },\r\n    { month: 'Mar', Tokyo: 9.5, London: 5.7 },\r\n    { month: 'Apr', Tokyo: 14.5, London: 8.5 },\r\n    { month: 'May', Tokyo: 18.4, London: 11.9 },\r\n    { month: 'Jun', Tokyo: 21.5, London: 15.2 },\r\n    { month: 'Jul', Tokyo: 25.2, London: 17.0 },\r\n    { month: 'Aug', Tokyo: 26.5, London: 16.6 },\r\n    { month: 'Sep', Tokyo: 23.3, London: 14.2 },\r\n    { month: 'Oct', Tokyo: 18.3, London: 10.3 },\r\n    { month: 'Nov', Tokyo: 13.9, London: 6.6 },\r\n    { month: 'Dec', Tokyo: 9.6, London: 4.8 }\r\n  ];\r\n  const ds = new DataSet();\r\n  const dv = ds.createView().source(data);\r\n  dv.transform({\r\n    type: 'fold',\r\n    fields: ['Tokyo', 'London'], // 展开字段集\r\n    key: 'city', // key字段\r\n    value: 'temperature' // value字段\r\n  });\r\n\r\n  const cols = {\r\n    month: {\r\n      range: [0, 1]\r\n    }\r\n  };\r\n  return (\r\n    <Chart data={dv} scale={cols}>\r\n      <Legend />\r\n      <Axis name=\"month\" />\r\n      <Axis name=\"temperature\" label={{ formatter: val => `${val}°C` }} />\r\n      <Tooltip crosshairs={{ type: 'y' }} />\r\n      <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\r\n      <Geom\r\n        type=\"point\"\r\n        position=\"month*temperature\"\r\n        size={4}\r\n        shape={'circle'}\r\n        color={'city'}\r\n        style={{ stroke: '#fff', lineWidth: 1 }}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport $$ from 'cmn-utils';\r\nimport config from '@/config';\r\n\r\nclass BaseComponent extends React.Component {\r\n  notice = config.notice; // 消息通知\r\n\r\n  /**\r\n   * history api 路由跳转\r\n   */\r\n  get history() { \r\n    return this.props.history;\r\n  }\r\n\r\n  /**\r\n   * 新增\r\n   */\r\n  onAdd = () => {\r\n    this.setState({\r\n      record: null,\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 修改\r\n   * @param {object} 表单记录\r\n   */\r\n  onUpdate = record => {\r\n    this.setState({\r\n      record,\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 删除\r\n   * @param {object | array} 表单记录, 批量删除时为数组\r\n   */\r\n  onDelete = record => {\r\n    if (!record) return;\r\n    if ($$.isArray(record) && !record.length) return;\r\n\r\n    const content = `您是否要删除这${\r\n      $$.isArray(record) ? record.length : ''\r\n    }项？`;\r\n\r\n    Modal.confirm({\r\n      title: '注意',\r\n      content,\r\n      onOk: () => {\r\n        this.handleDelete($$.isArray(record) ? record : [record]);\r\n      },\r\n      onCancel() {}\r\n    });\r\n  };\r\n\r\n  handleAdd() {\r\n    /* 子类重写 */\r\n  }\r\n  handleUpdate() {\r\n    /* 子类重写 */\r\n  }\r\n  handleDelete(records) {\r\n    /* 子类重写 */\r\n  }\r\n}\r\n\r\nexport default BaseComponent;\r\n","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\nimport cx from 'classnames';\r\nimport CSSAnimate from '../CSSAnimate';\r\nimport { Popconfirm, Modal } from 'antd';\r\nimport isEqual from 'react-fast-compare';\r\nimport './style/index.less';\r\nconst confirm = Modal.confirm;\r\nconst noop = _ => {};\r\n/**\r\n * 面板组件\r\n */\r\nclass Panel extends Component {\r\n  static defaultProps = {\r\n    prefix: 'antui-panel'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: props.collapse || false,\r\n      expand: props.expand || false,\r\n      refresh: 0,\r\n      animationName: ''\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      'collapse' in nextProps &&\r\n      !isEqual(nextProps.collapse, prevState.collapse)\r\n    ) {\r\n      return {\r\n        collapse: !!nextProps.collapse\r\n      };\r\n    }\r\n\r\n    if ('expand' in nextProps && !isEqual(nextProps.expand, prevState.expand)) {\r\n      return {\r\n        expand: !!nextProps.expand\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  onExpand = expand => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      expand,\r\n      collapse: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        expand,\r\n        collapse: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onCollapse = collapse => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      collapse,\r\n      expand: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        collapse,\r\n        expand: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onRefresh = () => {\r\n    this.setState({\r\n      refresh: this.state.refresh + 1,\r\n      animationName: 'fadeIn'\r\n    });\r\n    this.props.onRefresh && this.props.onRefresh();\r\n  };\r\n\r\n  onClose = () => {\r\n    const { expand } = this.state;\r\n    if (expand) {\r\n      confirm({\r\n        title: '提示',\r\n        content: '您确认要关闭这个面板？',\r\n        onOk: () => {\r\n          this.props.onClose && this.props.onClose();\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose && this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { expand, collapse, refresh, animationName } = this.state;\r\n    const {\r\n      theme,\r\n      prefix,\r\n      className,\r\n      title,\r\n      width,\r\n      height,\r\n      style,\r\n      children,\r\n      header,\r\n      cover,\r\n      scroll\r\n    } = this.props;\r\n\r\n    const classnames = cx(prefix, className, {\r\n      theme: !!theme,\r\n      'panel-fullscreen': !!expand,\r\n      'panel-collapsed': !!collapse,\r\n      cover: !!cover\r\n    });\r\n\r\n    const styles = {\r\n      ...style,\r\n      width\r\n    };\r\n    const bodyStyles = {};\r\n    if (!expand) {\r\n      bodyStyles.height = height;\r\n    }\r\n    if (scroll) {\r\n      bodyStyles.overflow = 'auto';\r\n    }\r\n\r\n    const Header =\r\n      typeof header === 'undefined' ? (\r\n        <div className={`${prefix}-header`}>\r\n          <span className={`${prefix}-header-title`}>{title}</span>\r\n          <span className={`${prefix}-header-controls`}>\r\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\r\n              <Icon type=\"refresh\" />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-fullscreen\"\r\n              onClick={this.onExpand(expand ? false : true)}\r\n            >\r\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-collapsed\"\r\n              onClick={this.onCollapse(collapse ? false : true)}\r\n            >\r\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\r\n            </a>\r\n            <Popconfirm\r\n              title=\"您确认要关闭这个面板？\"\r\n              onConfirm={this.onClose}\r\n              placement=\"topRight\"\r\n            >\r\n              <a\r\n                className=\"panel-control-remove\"\r\n                onClick={expand ? this.onClose : noop}\r\n              >\r\n                <Icon type=\"close\" />\r\n              </a>\r\n            </Popconfirm>\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        header\r\n      );\r\n\r\n    return (\r\n      <div className={classnames} style={styles}>\r\n        {Header}\r\n        <div className={`${prefix}-body`} style={bodyStyles}>\r\n          <CSSAnimate\r\n            className=\"panel-content\"\r\n            type={animationName}\r\n            callback={_ => this.setState({ animationName: '' })}\r\n            key={refresh}\r\n          >\r\n            {children}\r\n          </CSSAnimate>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import Panel from './Panel';\r\n\r\nexport default Panel;","'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _ExclamationCircleFilled = _interopRequireDefault(require('./lib/icons/ExclamationCircleFilled'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _ExclamationCircleFilled;\n  exports.default = _default;\n  module.exports = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ExclamationCircleFilled = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/ExclamationCircleFilled\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return _react.default.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _ExclamationCircleFilled.default\n  }));\n};\n\nExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\n\nvar _default = _react.default.forwardRef(ExclamationCircleFilled);\n\nexports.default = _default;","\"use strict\";\n// This icon file is generated automatically.\n// tslint:disable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExclamationCircleFilled = { \"name\": \"exclamation-circle\", \"theme\": \"filled\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] } };\nexports.default = ExclamationCircleFilled;\n"],"sourceRoot":""}