{"version":3,"sources":["routes/UI/Editor/components/index.js","components/BaseComponent/index.js","components/Panel/Panel.js","components/Panel/index.js","components/Editor/config.js","components/Editor/Editor.js","components/Editor/index.js"],"names":["Content","connect","state","html","htmlEditor","onChange","setState","onLoaded","editor","onChangeNative","className","title","href","Group","type","onClick","e","txt","success","this","value","BaseComponent","notice","config","onAdd","record","visible","onUpdate","onDelete","$$","isArray","length","content","confirm","onOk","handleDelete","onCancel","records","props","history","React","Component","noop","_","Panel","onExpand","expand","collapse","onCollapse","onRefresh","refresh","animationName","onClose","theme","prefix","width","height","style","children","header","cover","scroll","classnames","cx","styles","bodyStyles","overflow","Header","Icon","onConfirm","placement","CSSAnimate","callback","key","nextProps","prevState","isEqual","defaultProps","zIndex","uploadImgShowBase64","debounce","Editor","_onChange","otherProps","E","editorDom","customConfig","defaultConfig","onchange","isFunction","create","prevProps","ref","node"],"mappings":"qVAMQA,E,IAAAA,Q,EAEPC,a,8MAECC,MAAQ,CACNC,KAAM,GACNC,WAAY,I,EAEdC,SAAW,SAAAF,GACT,EAAKG,SAAS,CACZH,U,EAKJI,SAAW,SAAAC,GACT,EAAKA,OAASA,G,EAGhBC,eAAiB,SAAAN,GACf,EAAKG,SAAS,CACZF,WAAYD,K,wEAIN,IAAD,OACP,OACE,uBAAQO,UAAU,oBAChB,kBAACV,EAAD,KACE,kBAAC,IAAD,CAAOW,MAAM,sBACX,4DAEE,uBAAGC,KAAK,gDAAR,cAFF,yFASF,kBAAC,IAAD,CAAOD,MAAM,2BACX,2KAGA,2BACE,sBAAQE,MAAR,KACE,uBACEC,KAAK,UACLC,QAAS,SAAAC,GAAC,OAAI,EAAKR,OAAOS,IAAId,KAAK,6DAFrC,sBAMA,uBAAQY,QAAS,SAAAC,GAAC,OAAI,IAAQE,QAAQ,EAAKV,OAAOS,IAAId,UAAtD,sBAGA,uBAAQY,QAAS,SAAAC,GAAC,OAAI,EAAKR,OAAOS,IAAId,KAAK,MAA3C,wBAGJ,kBAAC,IAAD,CAAQI,SAAUY,KAAKZ,SAAUF,SAAUc,KAAKV,iBAChD,qCACCU,KAAKjB,MAAME,YAGd,kBAAC,IAAD,CAAOO,MAAM,4BACX,wOAGA,2BACE,sBAAQE,MAAR,KACE,uBACEC,KAAK,UACLC,QAAS,SAAAC,GAAC,OACR,EAAKV,SAAS,CAAEH,KAAM,kEAH1B,sBAQA,uBAAQY,QAAS,SAAAC,GAAC,OAAI,IAAQE,QAAQ,EAAKhB,MAAMC,QAAjD,sBAGA,uBAAQY,QAAS,SAAAC,GAAC,OAAI,EAAKV,SAAS,CAAEH,KAAM,OAA5C,wBAKJ,kBAAC,IAAD,CAAQE,SAAUc,KAAKd,SAAUe,MAAOD,KAAKjB,MAAMC,OACnD,qCACCgB,KAAKjB,MAAMC,Y,GAnFKkB,O,+ICJvBA,E,2MACJC,OAASC,IAAOD,O,EAYhBE,MAAQ,WACN,EAAKlB,SAAS,CACZmB,OAAQ,KACRC,SAAS,K,EAQbC,SAAW,SAAAF,GACT,EAAKnB,SAAS,CACZmB,SACAC,SAAS,K,EAQbE,SAAW,SAAAH,GACT,GAAKA,KACDI,IAAGC,QAAQL,IAAYA,EAAOM,QAAlC,CAEA,IAAMC,EAAO,oDACXH,IAAGC,QAAQL,GAAUA,EAAOM,OAAS,GAD1B,gBAIb,IAAME,QAAQ,CACZtB,MAAO,eACPqB,UACAE,KAAM,WACJ,EAAKC,aAAaN,IAAGC,QAAQL,GAAUA,EAAS,CAACA,KAEnDW,SANY,iB,yJAgBHC,M,8BApDX,OAAOlB,KAAKmB,MAAMC,Y,GAPMC,IAAMC,WAgEnBpB,O,8NC9DTY,G,OAAU,IAAMA,SAChBS,EAAO,SAAAC,KAIPC,E,YAKJ,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRO,SAAW,SAAAC,GAAM,OAAI,SAAA9B,GAAM,IACjBX,EAAa,EAAKiC,MAAlBjC,SAER,EAAKC,SAAS,CACZwC,SACAC,UAAU,IAGR1C,GACFA,EAAS,CACPyC,SACAC,UAAU,MAxCG,EA6CnBC,WAAa,SAAAD,GAAQ,OAAI,SAAA/B,GAAM,IACrBX,EAAa,EAAKiC,MAAlBjC,SAER,EAAKC,SAAS,CACZyC,WACAD,QAAQ,IAGNzC,GACFA,EAAS,CACP0C,WACAD,QAAQ,MAxDK,EA6DnBG,UAAY,WACV,EAAK3C,SAAS,CACZ4C,QAAS,EAAKhD,MAAMgD,QAAU,EAC9BC,cAAe,WAEjB,EAAKb,MAAMW,WAAa,EAAKX,MAAMW,aAlElB,EAqEnBG,QAAU,WACW,EAAKlD,MAAhB4C,OAENb,EAAQ,CACNtB,MAAO,eACPqB,QAAS,qEACTE,KAAM,WACJ,EAAKI,MAAMc,SAAW,EAAKd,MAAMc,aAIrC,EAAKd,MAAMc,SAAW,EAAKd,MAAMc,WA9EnC,EAAKlD,MAAQ,CACX6C,SAAUT,EAAMS,WAAY,EAC5BD,OAAQR,EAAMQ,SAAU,EACxBI,QAAS,EACTC,cAAe,IANA,E,sEAoFT,IAAD,SAC8ChC,KAAKjB,MAAlD4C,EADD,EACCA,OAAQC,EADT,EACSA,SAAUG,EADnB,EACmBA,QAASC,EAD5B,EAC4BA,cAD5B,EAcHhC,KAAKmB,MAXPe,EAHK,EAGLA,MACAC,EAJK,EAILA,OACA5C,EALK,EAKLA,UACAC,EANK,EAMLA,MACA4C,EAPK,EAOLA,MACAC,EARK,EAQLA,OACAC,EATK,EASLA,MACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,OACAC,EAZK,EAYLA,MACAC,EAbK,EAaLA,OAGIC,EAAaC,IAAGT,EAAQ5C,EAAW,CACvC2C,QAASA,EACT,qBAAsBP,EACtB,oBAAqBC,EACrBa,QAASA,IAGLI,EAAM,eACPP,EADO,CAEVF,UAEIU,EAAa,GACdnB,IACHmB,EAAWT,OAASA,GAElBK,IACFI,EAAWC,SAAW,QAGxB,IAAMC,EACc,qBAAXR,EACL,yBAAKjD,UAAS,UAAK4C,EAAL,YACZ,0BAAM5C,UAAS,UAAK4C,EAAL,kBAA6B3C,GAC5C,0BAAMD,UAAS,UAAK4C,EAAL,qBACb,uBAAG5C,UAAU,uBAAuBK,QAASI,KAAK8B,WAChD,kBAACmB,EAAA,EAAD,CAAMtD,KAAK,aAEb,uBACEJ,UAAU,2BACVK,QAASI,KAAK0B,UAASC,IAEvB,kBAACsB,EAAA,EAAD,CAAMtD,KAAI,UAAKgC,EAAS,SAAW,cAErC,uBACEpC,UAAU,0BACVK,QAASI,KAAK6B,YAAWD,IAEzB,kBAACqB,EAAA,EAAD,CAAMtD,KAAI,UAAKiC,EAAW,OAAS,YAErC,uBACEpC,MAAM,qEACN0D,UAAWlD,KAAKiC,QAChBkB,UAAU,YAEV,uBACE5D,UAAU,uBACVK,QAAS+B,EAAS3B,KAAKiC,QAAUV,GAEjC,kBAAC0B,EAAA,EAAD,CAAMtD,KAAK,cAMnB6C,EAGJ,OACE,yBAAKjD,UAAWoD,EAAYL,MAAOO,GAChCG,EACD,yBAAKzD,UAAS,UAAK4C,EAAL,SAAoBG,MAAOQ,GACvC,kBAACM,EAAA,EAAD,CACE7D,UAAU,gBACVI,KAAMqC,EACNqB,SAAU,SAAA7B,GAAC,OAAI,EAAKrC,SAAS,CAAE6C,cAAe,MAC9CsB,IAAKvB,GAEJQ,Q,gDA7JqBgB,EAAWC,GACzC,MACE,aAAcD,IACbE,IAAQF,EAAU3B,SAAU4B,EAAU5B,UAEhC,CACLA,WAAY2B,EAAU3B,UAItB,WAAY2B,IAAcE,IAAQF,EAAU5B,OAAQ6B,EAAU7B,QACzD,CACLA,SAAU4B,EAAU5B,QAIjB,S,GA/BSL,aAAdG,EACGiC,aAAe,CACpBvB,OAAQ,eAkLGV,QC9LAA,O,mJCFA,GAEbkC,OAAQ,EAERC,qBAAqB,G,gBCEfC,G,OAAanD,IAAbmD,UAmEOC,E,YA3Db,WAAY3C,GAAQ,IAAD,8BACjB,+CAyCFjC,SAAW,SAAAF,GAAS,IACVE,EAAa,EAAKiC,MAAlBjC,SACJA,GAAUA,EAASF,IA1CvB,EAAKD,MAAQ,CACXkB,MAAOkB,EAAMlB,OAIf,EAAK8D,UAAYF,EAAS,EAAK3E,SAAU,KAPxB,E,iFAUE,IAAD,EACyBc,KAAKmB,MAAxClB,EADU,EACVA,MAAOb,EADG,EACHA,SAAa4E,EADV,oCAElBhE,KAAKX,OAAS,IAAI4E,IAAEjE,KAAKkE,WACzBlE,KAAKX,OAAO8E,aAAZ,eACKC,EADL,CAEEC,SAAUrE,KAAK+D,WACZC,GAGD5E,GAAYsB,IAAG4D,WAAWN,EAAW9E,YACvCc,KAAKX,OAAO8E,aAAaE,SAAWL,EAAW9E,UAGjDc,KAAKX,OAAOkF,SACZvE,KAAKX,OAAOS,IAAId,KAAKiB,GAGjBb,GAAUA,EAASY,KAAKX,U,yCAGXmF,EAAWhB,GACxBgB,EAAUvE,QAAUD,KAAKmB,MAAMlB,QACjCD,KAAKb,SAAS,CACZc,MAAOD,KAAKmB,MAAMlB,QAGpBD,KAAKX,OAAOS,IAAId,KAAKgB,KAAKmB,MAAMlB,OAAS,IAEzCD,KAAK+D,UAAU/D,KAAKmB,MAAMlB,U,+BASpB,IAAD,OACP,OACE,yBACEV,UAAU,eACVkF,IAAK,SAAAC,GACH,EAAKR,UAAYQ,S,GA1DNpD,aCNNwC","file":"static/js/35.ac0703b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Layout, Button, message } from 'antd';\r\nimport BaseComponent from 'components/BaseComponent';\r\nimport Editor from 'components/Editor';\r\nimport Panel from 'components/Panel';\r\nconst { Content } = Layout;\r\n\r\n@connect()\r\nexport default class extends BaseComponent {\r\n  state = {\r\n    html: '',\r\n    htmlEditor: ''\r\n  };\r\n  onChange = html => {\r\n    this.setState({\r\n      html\r\n    });\r\n  };\r\n\r\n  // 会返回 wangEditor 的实例， 与他的onChange函数，注意这个是他的onChange\r\n  onLoaded = editor => {\r\n    this.editor = editor;\r\n  };\r\n\r\n  onChangeNative = html => {\r\n    this.setState({\r\n      htmlEditor: html\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"full-layout page\">\r\n        <Content>\r\n          <Panel title=\"富文本\">\r\n            <p>\r\n              富文本使用\r\n              <a href=\"https://github.com/wangfupeng1988/wangEditor\">\r\n                wangEditor\r\n              </a>\r\n              ，具体参数可以到其网站查看。\r\n            </p>\r\n          </Panel>\r\n\r\n          <Panel title=\"wangEditor 方式\">\r\n            <p>\r\n              建议使用这种方式，在onLoaded里取得原生对象操作编辑器\r\n            </p>\r\n            <p>\r\n              <Button.Group>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={e => this.editor.txt.html('<p>今天也要快乐啊！</p>')}\r\n                >\r\n                  设置值\r\n                </Button>\r\n                <Button onClick={e => message.success(this.editor.txt.html())}>\r\n                  获取值\r\n                </Button>\r\n                <Button onClick={e => this.editor.txt.html('')}>清空值</Button>\r\n              </Button.Group>\r\n            </p>\r\n            <Editor onLoaded={this.onLoaded} onChange={this.onChangeNative} />\r\n            <b>HTML: </b>\r\n            {this.state.htmlEditor}\r\n          </Panel>\r\n\r\n          <Panel title=\"完全控制\">\r\n            <p>\r\n              完全控制方式，使用简单，不涉及原生API调用，但是用户体验没有上面那种好\r\n            </p>\r\n            <p>\r\n              <Button.Group>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={e =>\r\n                    this.setState({ html: '<div>今天也要快乐啊！</div>' })\r\n                  }\r\n                >\r\n                  设置值\r\n                </Button>\r\n                <Button onClick={e => message.success(this.state.html)}>\r\n                  获取值\r\n                </Button>\r\n                <Button onClick={e => this.setState({ html: '' })}>\r\n                  清空值\r\n                </Button>\r\n              </Button.Group>\r\n            </p>\r\n            <Editor onChange={this.onChange} value={this.state.html} />\r\n            <b>HTML: </b>\r\n            {this.state.html}\r\n          </Panel>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport $$ from 'cmn-utils';\r\nimport config from '@/config';\r\n\r\nclass BaseComponent extends React.Component {\r\n  notice = config.notice; // 消息通知\r\n\r\n  /**\r\n   * history api 路由跳转\r\n   */\r\n  get history() { \r\n    return this.props.history;\r\n  }\r\n\r\n  /**\r\n   * 新增\r\n   */\r\n  onAdd = () => {\r\n    this.setState({\r\n      record: null,\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 修改\r\n   * @param {object} 表单记录\r\n   */\r\n  onUpdate = record => {\r\n    this.setState({\r\n      record,\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 删除\r\n   * @param {object | array} 表单记录, 批量删除时为数组\r\n   */\r\n  onDelete = record => {\r\n    if (!record) return;\r\n    if ($$.isArray(record) && !record.length) return;\r\n\r\n    const content = `您是否要删除这${\r\n      $$.isArray(record) ? record.length : ''\r\n    }项？`;\r\n\r\n    Modal.confirm({\r\n      title: '注意',\r\n      content,\r\n      onOk: () => {\r\n        this.handleDelete($$.isArray(record) ? record : [record]);\r\n      },\r\n      onCancel() {}\r\n    });\r\n  };\r\n\r\n  handleAdd() {\r\n    /* 子类重写 */\r\n  }\r\n  handleUpdate() {\r\n    /* 子类重写 */\r\n  }\r\n  handleDelete(records) {\r\n    /* 子类重写 */\r\n  }\r\n}\r\n\r\nexport default BaseComponent;\r\n","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\nimport cx from 'classnames';\r\nimport CSSAnimate from '../CSSAnimate';\r\nimport { Popconfirm, Modal } from 'antd';\r\nimport isEqual from 'react-fast-compare';\r\nimport './style/index.less';\r\nconst confirm = Modal.confirm;\r\nconst noop = _ => {};\r\n/**\r\n * 面板组件\r\n */\r\nclass Panel extends Component {\r\n  static defaultProps = {\r\n    prefix: 'antui-panel'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: props.collapse || false,\r\n      expand: props.expand || false,\r\n      refresh: 0,\r\n      animationName: ''\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      'collapse' in nextProps &&\r\n      !isEqual(nextProps.collapse, prevState.collapse)\r\n    ) {\r\n      return {\r\n        collapse: !!nextProps.collapse\r\n      };\r\n    }\r\n\r\n    if ('expand' in nextProps && !isEqual(nextProps.expand, prevState.expand)) {\r\n      return {\r\n        expand: !!nextProps.expand\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  onExpand = expand => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      expand,\r\n      collapse: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        expand,\r\n        collapse: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onCollapse = collapse => e => {\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      collapse,\r\n      expand: false\r\n    });\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        collapse,\r\n        expand: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onRefresh = () => {\r\n    this.setState({\r\n      refresh: this.state.refresh + 1,\r\n      animationName: 'fadeIn'\r\n    });\r\n    this.props.onRefresh && this.props.onRefresh();\r\n  };\r\n\r\n  onClose = () => {\r\n    const { expand } = this.state;\r\n    if (expand) {\r\n      confirm({\r\n        title: '提示',\r\n        content: '您确认要关闭这个面板？',\r\n        onOk: () => {\r\n          this.props.onClose && this.props.onClose();\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose && this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { expand, collapse, refresh, animationName } = this.state;\r\n    const {\r\n      theme,\r\n      prefix,\r\n      className,\r\n      title,\r\n      width,\r\n      height,\r\n      style,\r\n      children,\r\n      header,\r\n      cover,\r\n      scroll\r\n    } = this.props;\r\n\r\n    const classnames = cx(prefix, className, {\r\n      theme: !!theme,\r\n      'panel-fullscreen': !!expand,\r\n      'panel-collapsed': !!collapse,\r\n      cover: !!cover\r\n    });\r\n\r\n    const styles = {\r\n      ...style,\r\n      width\r\n    };\r\n    const bodyStyles = {};\r\n    if (!expand) {\r\n      bodyStyles.height = height;\r\n    }\r\n    if (scroll) {\r\n      bodyStyles.overflow = 'auto';\r\n    }\r\n\r\n    const Header =\r\n      typeof header === 'undefined' ? (\r\n        <div className={`${prefix}-header`}>\r\n          <span className={`${prefix}-header-title`}>{title}</span>\r\n          <span className={`${prefix}-header-controls`}>\r\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\r\n              <Icon type=\"refresh\" />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-fullscreen\"\r\n              onClick={this.onExpand(expand ? false : true)}\r\n            >\r\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\r\n            </a>\r\n            <a\r\n              className=\"panel-control-collapsed\"\r\n              onClick={this.onCollapse(collapse ? false : true)}\r\n            >\r\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\r\n            </a>\r\n            <Popconfirm\r\n              title=\"您确认要关闭这个面板？\"\r\n              onConfirm={this.onClose}\r\n              placement=\"topRight\"\r\n            >\r\n              <a\r\n                className=\"panel-control-remove\"\r\n                onClick={expand ? this.onClose : noop}\r\n              >\r\n                <Icon type=\"close\" />\r\n              </a>\r\n            </Popconfirm>\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        header\r\n      );\r\n\r\n    return (\r\n      <div className={classnames} style={styles}>\r\n        {Header}\r\n        <div className={`${prefix}-body`} style={bodyStyles}>\r\n          <CSSAnimate\r\n            className=\"panel-content\"\r\n            type={animationName}\r\n            callback={_ => this.setState({ animationName: '' })}\r\n            key={refresh}\r\n          >\r\n            {children}\r\n          </CSSAnimate>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import Panel from './Panel';\r\n\r\nexport default Panel;","export default {\r\n  // debug: true, // 定义 debug 模式\r\n  zIndex: 1,\r\n  // 下面两个配置，使用其中一个即可显示“上传图片”的tab。但是两者不要同时使用！！！\r\n  uploadImgShowBase64: true,   // 使用 base64 保存图片\r\n  // uploadImgServer: '/upload',  // 上传图片到服务器\r\n  // uploadImgMaxSize: 3 * 1024 * 1024, // 将图片大小限制为 3M\r\n  // uploadImgMaxLength: 5, // 限制一次最多上传 5 张图片\r\n  /* \r\n  // 自定义上传参数\r\n  uploadImgParams: {\r\n    token: 'abcdef12345'  // 属性值会自动进行 encode ，此处无需 encode\r\n  },\r\n  uploadImgHeaders: {\r\n    'Accept': 'text/x-json'\r\n  },\r\n  */\r\n  // uploadFileName: 'yourFileName', // 自定义 fileName\r\n  // withCredentials: true, // withCredentials（跨域传递 cookie）\r\n  // uploadImgTimeout: 3000, // 将 timeout 时间改为 3s\r\n  /* //自定义提示方法\r\n  customAlert = (info) => {\r\n    alert('自定义提示：' + info)\r\n  },\r\n  */\r\n\r\n  // 自定义 onchange 触发的延迟时间，默认为 200 ms\r\n  // onchangeTimeout: 1000, // 单位 ms\r\n  // onchange = html => html,\r\n\r\n  // onfocus = _ => {}; // 点击富文本区域会触发onfocus函数执行\r\n  // onblur = html => (); // 点击富文本以外的区域\r\n\r\n  // pasteFilterStyle: false,  // 关闭掉粘贴样式的过滤\r\n  // pasteIgnoreImg: true, // 忽略粘贴内容中的图片\r\n  // pasteTextHandle: context => content, // 自定义处理粘贴的文本内容\r\n  \r\n  /* \r\n  // 自定义配置颜色（字体颜色、背景色）\r\n  colors: [\r\n    '#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', \r\n    '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'\r\n  ],\r\n  */\r\n\r\n  /*\r\n  // 自定义字体\r\n  fontNames: [\r\n    '宋体',\r\n    '微软雅黑',\r\n    'Arial',\r\n    'Tahoma',\r\n    'Verdana'\r\n  ],\r\n  */\r\n  // menus: [], // 自定义菜单配置\r\n  /*\r\n  [\r\n    'head',  // 标题\r\n    'bold',  // 粗体\r\n    'italic',  // 斜体\r\n    'underline',  // 下划线\r\n    'strikeThrough',  // 删除线\r\n    'foreColor',  // 文字颜色\r\n    'backColor',  // 背景颜色\r\n    'link',  // 插入链接\r\n    'list',  // 列表\r\n    'justify',  // 对齐方式\r\n    'quote',  // 引用\r\n    'emoticon',  // 表情\r\n    'image',  // 插入图片\r\n    'table',  // 表格\r\n    'video',  // 插入视频\r\n    'code',  // 插入代码\r\n    'undo',  // 撤销\r\n    'redo',  // 重复\r\n  ],\r\n  */\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport E from 'wangeditor';\r\nimport defaultConfig from './config';\r\nimport $$ from 'cmn-utils';\r\nimport './style/index.less';\r\nconst { debounce } = $$;\r\n\r\nclass Editor extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    onLoaded: PropTypes.func,\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      value: props.value\r\n    };\r\n    // 设置这个值控制同步速度，速度过快影响输入体验，过慢可能获取到的是老值\r\n    // 如果体验过差，建议不要回传value, 使用onLoaded获取wangeditor实例\r\n    this._onChange = debounce(this.onChange, 2000);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value, onLoaded, ...otherProps } = this.props;\r\n    this.editor = new E(this.editorDom);\r\n    this.editor.customConfig = {\r\n      ...defaultConfig,\r\n      onchange: this._onChange,\r\n      ...otherProps\r\n    };\r\n\r\n    if (onLoaded && $$.isFunction(otherProps.onChange)) {\r\n      this.editor.customConfig.onchange = otherProps.onChange;\r\n    }\r\n    \r\n    this.editor.create();\r\n    this.editor.txt.html(value);\r\n\r\n    // 返回wangeditor\r\n    if (onLoaded) onLoaded(this.editor);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({\r\n        value: this.props.value\r\n      });\r\n\r\n      this.editor.txt.html(this.props.value || '');\r\n\r\n      this._onChange(this.props.value);\r\n    }\r\n  }\r\n\r\n  onChange = html => {\r\n    const { onChange } = this.props;\r\n    if (onChange) onChange(html);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"antui-editor\"\r\n        ref={node => {\r\n          this.editorDom = node;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import Editor from './Editor';\r\n\r\nexport default Editor;"],"sourceRoot":""}