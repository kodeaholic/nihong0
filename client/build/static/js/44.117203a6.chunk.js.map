{"version":3,"sources":["routes/Business/CRUD/model/index.js"],"names":["LOADED","modelEnhance","namespace","state","pageData","PageHelper","create","employees","subscriptions","setup","dispatch","history","listen","pathname","type","effects","init","payload","call","put","select","crud","startPage","getPageInfo","valueField","url","pageInfo","save","take","values","success","resolve","notice","data","update","remove","records","map","item","id","getEmployees","afterResponse","resp","reducers"],"mappings":"sKAOIA,GAAS,EACEC,sBAAa,CAC1BC,UAAW,OAEXC,MAAO,CACLC,SAAUC,IAAWC,SACrBC,UAAW,IAGbC,cAAe,CACbC,MADa,YACiB,IAAtBC,EAAqB,EAArBA,SAAqB,EAAXC,QACRC,QAAO,YACI,UADc,EAAfC,UACab,IAC3BA,GAAS,EACTU,EAAS,CACPI,KAAM,eAOhBC,QAAS,CAENC,KAFM,uGAGgB,OAHhB,EAECC,QAFD,EAEcC,KAAMC,EAFpB,EAEoBA,IAAKC,EAFzB,EAEyBA,OAFzB,SAGsBA,GAAO,SAAAjB,GAAK,OAAIA,EAAMkB,QAH5C,OAIL,OAJK,SAGGjB,EAHH,EAGGA,SAHH,SAICe,EAAI,CACRL,KAAM,cACNG,QAAS,CACPb,SAAUA,EAASkB,UAAU,EAAG,OAP/B,OAUL,OAVK,UAUCH,EAAI,CACRL,KAAM,iBAXH,2CAeNS,YAfM,qGAiBL,OAFaN,EAfR,EAeQA,QAfR,EAeqBC,KAAMC,EAf3B,EAe2BA,IACxBf,EAAaa,EAAbb,SAhBH,SAiBCe,EAAI,CACRL,KAAM,WACNG,QAAS,CACPO,WAAY,WACZC,IAAK,gBACLC,SAAUtB,KAtBT,0CA2BNuB,KA3BM,6GA6BgB,OAFfV,EA3BD,EA2BCA,QA3BD,EA2BcC,KAAMC,EA3BpB,EA2BoBA,IAAKC,EA3BzB,EA2ByBA,OA3BzB,EA2BiCQ,KAC9BC,EAAoBZ,EAApBY,OAAQC,EAAYb,EAAZa,QA5BX,SA6BsBV,GAAO,SAAAjB,GAAK,OAAIA,EAAMkB,QA7B5C,OA+BL,OA/BK,SA6BGjB,EA7BH,EA6BGA,SA7BH,SA+BCe,EAAIY,QAAQ,CAChBjB,KAAM,WACNG,QAAS,CACPe,QAAQ,EACRP,IAAK,aACLQ,KAAMJ,KApCL,OAwCL,OAxCK,UAwCCV,EAAI,CACRL,KAAM,cACNG,QAAS,CAAEb,cA1CR,QA4CL0B,IA5CK,2CA+CNI,OA/CM,6FA+CGjB,QA/CH,EA+CgBC,KA/ChB,EA+CsBC,IA/CtB,0CAiDNgB,OAjDM,6GAmDgB,OAFblB,EAjDH,EAiDGA,QAjDH,EAiDgBC,KAAMC,EAjDtB,EAiDsBA,IAAKC,EAjD3B,EAiD2BA,OACxBgB,EAAqBnB,EAArBmB,QAASN,EAAYb,EAAZa,QAlDZ,SAmDsBV,GAAO,SAAAjB,GAAK,OAAIA,EAAMkB,QAnD5C,OAoDL,OApDK,SAmDGjB,EAnDH,EAmDGA,SAnDH,SAoDCe,EAAI,CACRL,KAAM,WACNG,QAAS,CACPe,QAAQ,EACRP,IAAK,mBACLQ,KAAMG,EAAQC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAzD9B,OA4DL,OA5DK,UA4DCpB,EAAI,CACRL,KAAM,cACNG,QAAS,CAAEb,cA9DR,QAgEL0B,IAhEK,2CAmENU,aAnEM,iGAoEL,OApEK,EAmESvB,QAnET,EAmEsBC,KAAMC,EAnE5B,EAmE4BA,IAnE5B,SAoECA,EAAI,CACRL,KAAM,WACN2B,cAAe,SAAAC,GAAI,OAAIA,EAAKT,MAC5BhB,QAAS,CACPO,WAAY,YACZC,IAAK,2BAzEJ,2CA+ETkB,SAAU","file":"static/js/44.117203a6.chunk.js","sourcesContent":["import modelEnhance from '@/utils/modelEnhance';\r\nimport PageHelper from '@/utils/pageHelper';\r\n/**\r\n * 当第一次加载完页面时为true\r\n * 可以用这个值阻止切换页面时\r\n * 多次初始化数据\r\n */\r\nlet LOADED = false;\r\nexport default modelEnhance({\r\n  namespace: 'crud',\r\n\r\n  state: {\r\n    pageData: PageHelper.create(),\r\n    employees: []\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n      history.listen(({ pathname }) => {\r\n        if (pathname === '/crud' && !LOADED) {\r\n          LOADED = true;\r\n          dispatch({\r\n            type: 'init'\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  effects: {\r\n    // 进入页面加载\r\n    *init({ payload }, { call, put, select }) {\r\n      const { pageData } = yield select(state => state.crud);\r\n      yield put({\r\n        type: 'getPageInfo',\r\n        payload: {\r\n          pageData: pageData.startPage(1, 10)\r\n        }\r\n      });\r\n      yield put({\r\n        type: 'getEmployees'\r\n      });\r\n    },\r\n    // 获取分页数据\r\n    *getPageInfo({ payload }, { call, put }) {\r\n      const { pageData } = payload;\r\n      yield put({\r\n        type: '@request',\r\n        payload: {\r\n          valueField: 'pageData',\r\n          url: '/crud/getList',\r\n          pageInfo: pageData\r\n        }\r\n      });\r\n    },\r\n    // 保存 之后查询分页\r\n    *save({ payload }, { call, put, select, take }) {\r\n      const { values, success } = payload;\r\n      const { pageData } = yield select(state => state.crud);\r\n      // put是非阻塞的 put.resolve是阻塞型的\r\n      yield put.resolve({\r\n        type: '@request',\r\n        payload: {\r\n          notice: true,\r\n          url: '/crud/save',\r\n          data: values\r\n        }\r\n      });\r\n\r\n      yield put({\r\n        type: 'getPageInfo',\r\n        payload: { pageData }\r\n      });\r\n      success();\r\n    },\r\n    // 修改\r\n    *update({ payload }, { call, put }) {},\r\n    // 删除 之后查询分页\r\n    *remove({ payload }, { call, put, select }) {\r\n      const { records, success } = payload;\r\n      const { pageData } = yield select(state => state.crud);\r\n      yield put({\r\n        type: '@request',\r\n        payload: {\r\n          notice: true,\r\n          url: '/crud/bathDelete',\r\n          data: records.map(item => item.id)\r\n        }\r\n      });\r\n      yield put({\r\n        type: 'getPageInfo',\r\n        payload: { pageData }\r\n      });\r\n      success();\r\n    },\r\n    // 获取员工列表\r\n    *getEmployees({ payload }, { call, put }) {\r\n      yield put({\r\n        type: '@request',\r\n        afterResponse: resp => resp.data,\r\n        payload: {\r\n          valueField: 'employees',\r\n          url: '/crud/getWorkEmployee'\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  reducers: {}\r\n});\r\n"],"sourceRoot":""}